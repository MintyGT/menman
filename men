<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Flappy Bird</title>
<style>
    canvas {
        border: 1px solid black;
        display: block;
        margin: 0 auto;
    }
</style>
</head>
<body>
<canvas id="gameCanvas" width="400" height="400"></canvas>

<script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    let bird = {
        x: 50,
        y: canvas.height / 2,
        velocity: 0,
        gravity: 0.1,
        jumpStrength: -3
    };

    let pipes = [];
    let pipeWidth = 50;
    let pipeGap = 100;
    let pipeSpeed = 2;
    let score = 0;
    let gameover = false;

    function drawBird() {
        ctx.fillStyle = 'yellow';
        ctx.fillRect(bird.x, bird.y, 20, 20);
    }

    function drawPipes() {
        ctx.fillStyle = 'green';
        pipes.forEach(pipe => {
            ctx.fillRect(pipe.x, 0, pipeWidth, pipe.height);
            ctx.fillRect(pipe.x, pipe.height + pipeGap, pipeWidth, canvas.height - pipe.height - pipeGap);
        });
    }

    function updateBird() {
        bird.velocity += bird.gravity;
        bird.y += bird.velocity;
    }

    function generatePipes() {
        if (pipes.length === 0 || pipes[pipes.length - 1].x < canvas.width - 150) {
            let height = Math.random() * (canvas.height - pipeGap);
            pipes.push({ x: canvas.width, height: height });
        }
    }

    function updatePipes() {
        pipes.forEach(pipe => {
            pipe.x -= pipeSpeed;
            if (pipe.x + pipeWidth < 0) {
                pipes.shift();
                score++;
            }
            if (pipe.x < bird.x + 20 && pipe.x + pipeWidth > bird.x &&
                (bird.y < pipe.height || bird.y + 20 > pipe.height + pipeGap)) {
                gameover = true;
            }
        });
    }

    function drawScore() {
        ctx.fillStyle = 'black';
        ctx.font = '24px Arial';
        ctx.fillText(`Score: ${score}`, 10, 30);
    }

    function gameLoop() {
        if (!gameover) {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            updateBird();
            drawBird();
            generatePipes();
            updatePipes();
            drawPipes();
            drawScore();
            requestAnimationFrame(gameLoop);
        } else {
            ctx.fillStyle = 'red';
            ctx.font = '48px Arial';
            ctx.fillText('Game Over', 100, 200);
            ctx.fillText(`Score: ${score}`, 130, 250);
        }
    }

    document.addEventListener('keydown', function (event) {
        if (event.key === ' ' && !gameover) {
            bird.velocity = bird.jumpStrength;
        }
        if (event.key === ' ' && gameover) {
            resetGame();
        }
    });

    function resetGame() {
        bird = {
            x: 50,
            y: canvas.height / 2,
            velocity: 0,
            gravity: 0.1,
            jumpStrength: -3
        };
        pipes = [];
        score = 0;
        gameover = false;
        gameLoop();
    }

    gameLoop();
</script>
</body>
</html>
